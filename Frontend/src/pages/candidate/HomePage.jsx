import React, { useState } from "react";
import {
  Layout,
  Row,
  Col,
  Card,
  Button,
  Tag,
  Avatar,
  Carousel,
  Input,
  Select,
  Space,
  Typography,
  Divider,
  Badge,
  Rate,
} from "antd";
import {
  SearchOutlined,
  EnvironmentOutlined,
  DollarOutlined,
  ClockCircleOutlined,
  FireOutlined,
  StarOutlined,
  RightOutlined,
  HeartOutlined,
  ShareAltOutlined,
  TeamOutlined,
  TrophyOutlined,
  UserOutlined,
  CheckCircleOutlined,
} from "@ant-design/icons";
import styles from "../../styles/HomePage.module.css";

const { Content } = Layout;
const { Title, Text, Paragraph } = Typography;
const { Search } = Input;
const { Option } = Select;

const HomePage = () => {
  const [searchKeyword, setSearchKeyword] = useState("");
  const [selectedLocation, setSelectedLocation] = useState("");

  // Sample data
  const featuredJobs = [
    {
      id: 1,
      title: "Senior Frontend Developer",
      company: "TechViet Solutions",
      logo: "https://via.placeholder.com/60/577cf6/ffffff?text=TV",
      location: "H·ªì Ch√≠ Minh",
      salary: "25-35 tri·ªáu",
      type: "Full-time",
      tags: ["React", "TypeScript", "Next.js"],
      urgent: true,
      saved: false,
      posted: "2 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 2,
      title: "Product Manager",
      company: "StartupXYZ",
      logo: "https://via.placeholder.com/60/36CFC9/ffffff?text=SX",
      location: "H√† N·ªôi",
      salary: "30-45 tri·ªáu",
      type: "Full-time",
      tags: ["Product Strategy", "Agile", "Analytics"],
      urgent: false,
      saved: true,
      posted: "4 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 3,
      title: "UI/UX Designer",
      company: "Creative Agency",
      logo: "https://via.placeholder.com/60/FF6B6B/ffffff?text=CA",
      location: "ƒê√† N·∫µng",
      salary: "15-25 tri·ªáu",
      type: "Full-time",
      tags: ["Figma", "Sketch", "Prototyping"],
      urgent: false,
      saved: false,
      posted: "1 ng√†y tr∆∞·ªõc",
    },
    {
      id: 4,
      title: "DevOps Engineer",
      company: "CloudTech Corp",
      logo: "https://via.placeholder.com/60/4ECDC4/ffffff?text=CT",
      location: "Remote",
      salary: "35-50 tri·ªáu",
      type: "Remote",
      tags: ["AWS", "Docker", "Kubernetes"],
      urgent: true,
      saved: false,
      posted: "3 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 5,
      title: "Data Scientist",
      company: "AI Innovations",
      logo: "https://via.placeholder.com/60/95E1D3/ffffff?text=AI",
      location: "H·ªì Ch√≠ Minh",
      salary: "40-60 tri·ªáu",
      type: "Full-time",
      tags: ["Python", "Machine Learning", "TensorFlow"],
      urgent: false,
      saved: true,
      posted: "5 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 6,
      title: "Mobile Developer",
      company: "AppMaster Studio",
      logo: "https://via.placeholder.com/60/FFD93D/ffffff?text=AM",
      location: "H√† N·ªôi",
      salary: "20-30 tri·ªáu",
      type: "Full-time",
      tags: ["React Native", "iOS", "Android"],
      urgent: false,
      saved: false,
      posted: "1 ng√†y tr∆∞·ªõc",
    },
  ];

  const topCompanies = [
    {
      id: 1,
      name: "FPT Software",
      logo: "https://via.placeholder.com/80/577cf6/ffffff?text=FPT",
      rating: 4.2,
      reviews: 1250,
      jobs: 45,
      description:
        "C√¥ng ty ph·∫ßn m·ªÅm h√†ng ƒë·∫ßu Vi·ªát Nam v·ªõi h∆°n 25 nƒÉm kinh nghi·ªám",
      employees: "10,000+",
    },
    {
      id: 2,
      name: "Viettel",
      logo: "https://via.placeholder.com/80/36CFC9/ffffff?text=VT",
      rating: 4.0,
      reviews: 890,
      jobs: 32,
      description: "T·∫≠p ƒëo√†n c√¥ng ngh·ªá - vi·ªÖn th√¥ng h√†ng ƒë·∫ßu",
      employees: "50,000+",
    },
    {
      id: 3,
      name: "VNG Corporation",
      logo: "https://via.placeholder.com/80/FF6B6B/ffffff?text=VNG",
      rating: 4.5,
      reviews: 567,
      jobs: 28,
      description: "C√¥ng ty c√¥ng ngh·ªá gi·∫£i tr√≠ v√† game s·ªë 1 Vi·ªát Nam",
      employees: "3,000+",
    },
    {
      id: 4,
      name: "Tiki Corporation",
      logo: "https://via.placeholder.com/80/4ECDC4/ffffff?text=TK",
      rating: 4.3,
      reviews: 423,
      jobs: 24,
      description: "N·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ h√†ng ƒë·∫ßu Vi·ªát Nam",
      employees: "2,500+",
    },
  ];

  const carouselItems = [
    {
      title: "T√¨m vi·ªác l√†m IT t·ªët nh·∫•t",
      subtitle: "H∆°n 10,000 c∆° h·ªôi vi·ªác l√†m ƒëang ch·ªù b·∫°n",
      icon: "üíª",
      className: styles.carouselItemIt,
    },
    {
      title: "Kh·ªüi nghi·ªáp c√πng Startup",
      subtitle: "Gia nh·∫≠p c√°c c√¥ng ty startup ƒë·∫ßy ti·ªÅm nƒÉng",
      icon: "üöÄ",
      className: styles.carouselItemStartup,
    },
    {
      title: "Remote Work - T∆∞∆°ng lai c·ªßa c√¥ng vi·ªác",
      subtitle: "L√†m vi·ªác t·ª´ xa v·ªõi m·ª©c l∆∞∆°ng h·∫•p d·∫´n",
      icon: "üè†",
      className: styles.carouselItemRemote,
    },
  ];

  const handleSearch = () => {
    console.log("Search:", searchKeyword, selectedLocation);
  };

  return (
    <Layout className={styles.homepageLayout}>
      <Content className={styles.homepageContent}>
        {/* Hero Section */}
        <Row>
          <Col span={2} />
          <Col span={20}>
            <section className={styles.heroSection}>
              <div className={styles.heroBackground}></div>
              <div className={styles.heroContainer}>
                <Row gutter={[40, 40]} align="middle">
                  <Col xs={24} lg={14}>
                    <div className={styles.heroContent}>
                      <div className={styles.heroBadge}>
                        <TrophyOutlined /> #1 N·ªÅn t·∫£ng tuy·ªÉn d·ª•ng Vi·ªát Nam
                      </div>
                      <Title level={1} className={styles.heroTitle}>
                        T√¨m ki·∫øm c∆° h·ªôi ngh·ªÅ nghi·ªáp
                        <span className={styles.highlight}> tuy·ªát v·ªùi</span>
                      </Title>
                      <Paragraph className={styles.heroDescription}>
                        Kh√°m ph√° h√†ng ngh√¨n vi·ªác l√†m t·ª´ c√°c c√¥ng ty h√†ng ƒë·∫ßu.
                        B·∫Øt ƒë·∫ßu h√†nh tr√¨nh s·ª± nghi·ªáp c·ªßa b·∫°n ngay h√¥m nay v·ªõi
                        m·ª©c l∆∞∆°ng c·∫°nh tranh v√† m√¥i tr∆∞·ªùng l√†m vi·ªác chuy√™n
                        nghi·ªáp!
                      </Paragraph>

                      {/* Search Bar */}
                      <div className={styles.heroSearch}>
                        <div className={styles.searchContainer}>
                          <div className={styles.searchInputGroup}>
                            <Input
                              size="large"
                              placeholder="Nh·∫≠p v·ªã tr√≠ c√¥ng vi·ªác, k·ªπ nƒÉng..."
                              prefix={<SearchOutlined />}
                              value={searchKeyword}
                              onChange={(e) => setSearchKeyword(e.target.value)}
                              className={styles.searchInput}
                            />
                          </div>
                          <div className={styles.locationoselectGroup}>
                            <Select
                              size="large"
                              placeholder="Ch·ªçn ƒë·ªãa ƒëi·ªÉm"
                              className={styles.locationSelect}
                              value={selectedLocation}
                              onChange={setSelectedLocation}
                              allowClear
                              suffixIcon={<EnvironmentOutlined />}
                            >
                              <Option value="ho-chi-minh">H·ªì Ch√≠ Minh</Option>
                              <Option value="ha-noi">H√† N·ªôi</Option>
                              <Option value="da-nang">ƒê√† N·∫µng</Option>
                              <Option value="can-tho">C·∫ßn Th∆°</Option>
                              <Option value="remote">Remote</Option>
                            </Select>
                          </div>
                          <Button
                            type="primary"
                            size="large"
                            className={styles.searchButton}
                            onClick={handleSearch}
                          >
                            <SearchOutlined /> T√¨m ki·∫øm
                          </Button>
                        </div>
                      </div>

                      {/* Quick Tags */}
                      <div className={styles.quickTags}>
                        <Text className={styles.tagsLabel}>
                          T·ª´ kh√≥a ph·ªï bi·∫øn:
                        </Text>
                        <Space wrap>
                          {[
                            "React",
                            "Python",
                            "Java",
                            "Marketing",
                            "Design",
                            "DevOps",
                            "AI/ML",
                            "Remote",
                          ].map((tag) => (
                            <Tag key={tag} className={styles.quickTag}>
                              {tag}
                            </Tag>
                          ))}
                        </Space>
                      </div>

                      {/* Statistics */}
                      <div className={styles.heroStats}>
                        <div className={styles.statItem}>
                          <Title level={4} className={styles.statNumber}>
                            10K+
                          </Title>
                          <Text className={styles.statLabel}>Vi·ªác l√†m</Text>
                        </div>
                        <div className={styles.statItem}>
                          <Title level={4} className={styles.statNumber}>
                            5K+
                          </Title>
                          <Text className={styles.statLabel}>C√¥ng ty</Text>
                        </div>
                        <div className={styles.statItem}>
                          <Title level={4} className={styles.statNumber}>
                            100K+
                          </Title>
                          <Text className={styles.statLabel}>·ª®ng vi√™n</Text>
                        </div>
                      </div>
                    </div>
                  </Col>
                  <Col xs={24} lg={10}>
                    <div className={styles.heroCarousel}>
                      <Carousel autoplay autoplaySpeed={4000} effect="fade">
                        {carouselItems.map((item, index) => (
                          <div key={index}>
                            <div
                              className={`${styles.carouselItem} ${item.className}`}
                            >
                              <div className={styles.carouselContent}>
                                <div className={styles.carouselIcon}>
                                  {item.icon}
                                </div>
                                <Title
                                  level={3}
                                  className={styles.carouselTitle}
                                >
                                  {item.title}
                                </Title>
                                <Text className={styles.carouselSubtitle}>
                                  {item.subtitle}
                                </Text>
                              </div>
                            </div>
                          </div>
                        ))}
                      </Carousel>
                    </div>
                  </Col>
                </Row>
              </div>
            </section>
          </Col>
          <Col span={2} />
        </Row>
        {/* Featured Jobs Section */}
        <Row>
          <Col span={2} />
          <Col span={20}>
            <section className={styles.featuredJobsSection}>
              <div className={styles.sectionContainer}>
                <div className={styles.sectionHeader}>
                  <div className={styles.sectionTitleGroup}>
                    <Title level={2} className={styles.sectionTitle}>
                      <FireOutlined className={styles.sectionIcon} />
                      Vi·ªác l√†m n·ªïi b·∫≠t
                    </Title>
                    <Text className={styles.sectionSubtitle}>
                      Nh·ªØng c∆° h·ªôi vi·ªác l√†m t·ªët nh·∫•t ƒë∆∞·ª£c c·∫≠p nh·∫≠t h√†ng ng√†y
                    </Text>
                  </div>
                  <Button type="primary" ghost className={styles.viewAllBtn}>
                    Xem t·∫•t c·∫£ <RightOutlined />
                  </Button>
                </div>

                <Row gutter={[24, 24]}>
                  {featuredJobs.map((job) => (
                    <Col xs={24} md={12} xl={8} key={job.id}>
                      <Card className={styles.jobCard} hoverable>
                        <div className={styles.jobHeader}>
                          <Avatar
                            src={job.logo}
                            size={56}
                            className={styles.companyLogo}
                          />
                          <div className={styles.jobActions}>
                            <Button
                              type="text"
                              icon={<HeartOutlined />}
                              className={`${styles.saveBtn} ${
                                job.saved ? styles.saved : ""
                              }`}
                            />
                            <Button
                              type="text"
                              icon={<ShareAltOutlined />}
                              className={styles.shareBtn}
                            />
                          </div>
                        </div>

                        <div className={styles.jobInfo}>
                          <div className={styles.jobTitleGroup}>
                            <Title level={4} className={styles.jobTitle}>
                              {job.title}
                            </Title>
                            {job.urgent && (
                              <Badge
                                count="Urgent"
                                className={styles.urgentBadge}
                              />
                            )}
                          </div>
                          <Text className={styles.companyName}>
                            {job.company}
                          </Text>

                          <div className={styles.jobDetails}>
                            <div className={styles.detailItem}>
                              <EnvironmentOutlined
                                className={styles.detailIcon}
                              />
                              <Text>{job.location}</Text>
                            </div>
                            <div className={styles.detailItem}>
                              <DollarOutlined className={styles.detailIcon} />
                              <Text className={styles.salaryText}>
                                {job.salary}
                              </Text>
                            </div>
                            <div className={styles.detailItem}>
                              <ClockCircleOutlined
                                className={styles.detailIcon}
                              />
                              <Tag className={styles.jobTypeTag}>
                                {job.type}
                              </Tag>
                            </div>
                          </div>

                          <div className={styles.jobTags}>
                            {job.tags.map((tag) => (
                              <Tag key={tag} className={styles.skillTag}>
                                {tag}
                              </Tag>
                            ))}
                          </div>

                          <div className={styles.jobFooter}>
                            <Text
                              className={styles.postedTime}
                              type="secondary"
                            >
                              <ClockCircleOutlined /> {job.posted}
                            </Text>
                            <Button type="primary" className={styles.applyBtn}>
                              ·ª®ng tuy·ªÉn ngay
                            </Button>
                          </div>
                        </div>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </div>
            </section>
          </Col>
          <Col span={2} />
        </Row>

        {/* Top Companies Section */}
        <Row>
          <Col span={2} />
          <Col span={20}>
            <section className={styles.topCompaniesSection}>
              <div className={styles.sectionContainer}>
                <div className={styles.sectionHeader}>
                  <div className={styles.sectionTitleGroup}>
                    <Title level={2} className={styles.sectionTitle}>
                      <StarOutlined className={styles.sectionIcon} />
                      Top c√¥ng ty h√†ng ƒë·∫ßu
                    </Title>
                    <Text className={styles.sectionSubtitle}>
                      Nh·ªØng c√¥ng ty uy t√≠n v·ªõi m√¥i tr∆∞·ªùng l√†m vi·ªác t·ªët nh·∫•t
                    </Text>
                  </div>
                  <Button type="primary" ghost className={styles.viewAllBtn}>
                    Xem t·∫•t c·∫£ <RightOutlined />
                  </Button>
                </div>

                <Row gutter={[24, 24]}>
                  {topCompanies.map((company) => (
                    <Col xs={24} md={12} lg={6} key={company.id}>
                      <Card className={styles.companyCard} hoverable>
                        <div className={styles.companyHeader}>
                          <Avatar
                            src={company.logo}
                            size={72}
                            className={styles.companyAvatar}
                          />
                          <div className={styles.companyRating}>
                            <Rate
                              disabled
                              defaultValue={company.rating}
                              allowHalf
                              className={styles.ratingStars}
                            />
                            <Text className={styles.ratingText}>
                              {company.rating} ({company.reviews})
                            </Text>
                          </div>
                        </div>

                        <div className={styles.companyInfo}>
                          <Title level={4} className={styles.companyName}>
                            {company.name}
                          </Title>
                          <Paragraph className={styles.companyDescription}>
                            {company.description}
                          </Paragraph>
                        </div>

                        <div className={styles.companyStats}>
                          <div className={styles.companyStat}>
                            <TeamOutlined className={styles.statIcon} />
                            <Text>{company.employees} nh√¢n vi√™n</Text>
                          </div>
                          <div className={styles.companyStat}>
                            <CheckCircleOutlined className={styles.statIcon} />
                            <Text>{company.jobs} vi·ªác l√†m</Text>
                          </div>
                        </div>

                        <div className={styles.companyFooter}>
                          <Button
                            type="primary"
                            className={styles.viewCompanyBtn}
                            block
                          >
                            Xem c√¥ng ty
                          </Button>
                        </div>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </div>
            </section>
          </Col>
          <Col span={2} />
        </Row>

        {/* Features Section */}
        <section className={styles.featuresSection}>
          <div className={styles.sectionContainer}>
            <div className={`${styles.sectionHeader} ${styles.centered}`}>
              <Title level={2} className={styles.sectionTitle}>
                T·∫°i sao ch·ªçn ch√∫ng t√¥i?
              </Title>
              <Text className={styles.sectionSubtitle}>
                Nh·ªØng l√Ω do khi·∫øn Jobzi tr·ªü th√†nh l·ª±a ch·ªçn h√†ng ƒë·∫ßu
              </Text>
            </div>

            <Row gutter={[32, 32]} justify="center">
              <Col xs={24} md={8}>
                <div className={styles.featureItem}>
                  <div className={styles.featureIcon}>
                    <SearchOutlined />
                  </div>
                  <Title level={4} className={styles.featureTitle}>
                    T√¨m ki·∫øm th√¥ng minh
                  </Title>
                  <Text className={styles.featureDescription}>
                    C√¥ng ngh·ªá AI gi√∫p t√¨m ki·∫øm v√† g·ª£i √Ω vi·ªác l√†m ph√π h·ª£p v·ªõi k·ªπ
                    nƒÉng v√† kinh nghi·ªám c·ªßa b·∫°n
                  </Text>
                </div>
              </Col>
              <Col xs={24} md={8}>
                <div className={styles.featureItem}>
                  <div className={styles.featureIcon}>
                    <UserOutlined />
                  </div>
                  <Title level={4} className={styles.featureTitle}>
                    H·ªì s∆° chuy√™n nghi·ªáp
                  </Title>
                  <Text className={styles.featureDescription}>
                    T·∫°o h·ªì s∆° ·∫•n t∆∞·ª£ng v·ªõi c√°c template ƒë∆∞·ª£c thi·∫øt k·∫ø b·ªüi chuy√™n
                    gia HR
                  </Text>
                </div>
              </Col>
              <Col xs={24} md={8}>
                <div className={styles.featureItem}>
                  <div className={styles.featureIcon}>
                    <CheckCircleOutlined />
                  </div>
                  <Title level={4} className={styles.featureTitle}>
                    ·ª®ng tuy·ªÉn nhanh ch√≥ng
                  </Title>
                  <Text className={styles.featureDescription}>
                    ·ª®ng tuy·ªÉn ch·ªâ v·ªõi m·ªôt c√∫ click v√† theo d√µi tr·∫°ng th√°i ƒë∆°n
                    ·ª©ng tuy·ªÉn real-time
                  </Text>
                </div>
              </Col>
            </Row>
          </div>
        </section>
      </Content>
    </Layout>
  );
};

export default HomePage;
