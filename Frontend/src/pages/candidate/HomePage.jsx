import React, { useState } from "react";
import {
  Layout,
  Row,
  Col,
  Card,
  Button,
  Tag,
  Avatar,
  Carousel,
  Input,
  Select,
  Space,
  Typography,
  Divider,
  Badge,
  Rate,
} from "antd";
import {
  SearchOutlined,
  EnvironmentOutlined,
  DollarOutlined,
  ClockCircleOutlined,
  FireOutlined,
  StarOutlined,
  RightOutlined,
  HeartOutlined,
  ShareAltOutlined,
  TeamOutlined,
  TrophyOutlined,
  UserOutlined,
  CheckCircleOutlined,
} from "@ant-design/icons";
import "../../styles/HomePage.css";

const { Content } = Layout;
const { Title, Text, Paragraph } = Typography;
const { Search } = Input;
const { Option } = Select;

const HomePage = () => {
  const [searchKeyword, setSearchKeyword] = useState("");
  const [selectedLocation, setSelectedLocation] = useState("");

  // Sample data
  const featuredJobs = [
    {
      id: 1,
      title: "Senior Frontend Developer",
      company: "TechViet Solutions",
      logo: "https://via.placeholder.com/60/577cf6/ffffff?text=TV",
      location: "H·ªì Ch√≠ Minh",
      salary: "25-35 tri·ªáu",
      type: "Full-time",
      tags: ["React", "TypeScript", "Next.js"],
      urgent: true,
      saved: false,
      posted: "2 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 2,
      title: "Product Manager",
      company: "StartupXYZ",
      logo: "https://via.placeholder.com/60/36CFC9/ffffff?text=SX",
      location: "H√† N·ªôi",
      salary: "30-45 tri·ªáu",
      type: "Full-time",
      tags: ["Product Strategy", "Agile", "Analytics"],
      urgent: false,
      saved: true,
      posted: "4 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 3,
      title: "UI/UX Designer",
      company: "Creative Agency",
      logo: "https://via.placeholder.com/60/FF6B6B/ffffff?text=CA",
      location: "ƒê√† N·∫µng",
      salary: "15-25 tri·ªáu",
      type: "Full-time",
      tags: ["Figma", "Sketch", "Prototyping"],
      urgent: false,
      saved: false,
      posted: "1 ng√†y tr∆∞·ªõc",
    },
    {
      id: 4,
      title: "DevOps Engineer",
      company: "CloudTech Corp",
      logo: "https://via.placeholder.com/60/4ECDC4/ffffff?text=CT",
      location: "Remote",
      salary: "35-50 tri·ªáu",
      type: "Remote",
      tags: ["AWS", "Docker", "Kubernetes"],
      urgent: true,
      saved: false,
      posted: "3 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 5,
      title: "Data Scientist",
      company: "AI Innovations",
      logo: "https://via.placeholder.com/60/95E1D3/ffffff?text=AI",
      location: "H·ªì Ch√≠ Minh",
      salary: "40-60 tri·ªáu",
      type: "Full-time",
      tags: ["Python", "Machine Learning", "TensorFlow"],
      urgent: false,
      saved: true,
      posted: "5 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 6,
      title: "Mobile Developer",
      company: "AppMaster Studio",
      logo: "https://via.placeholder.com/60/FFD93D/ffffff?text=AM",
      location: "H√† N·ªôi",
      salary: "20-30 tri·ªáu",
      type: "Full-time",
      tags: ["React Native", "iOS", "Android"],
      urgent: false,
      saved: false,
      posted: "1 ng√†y tr∆∞·ªõc",
    },
  ];

  const topCompanies = [
    {
      id: 1,
      name: "FPT Software",
      logo: "https://via.placeholder.com/80/577cf6/ffffff?text=FPT",
      rating: 4.2,
      reviews: 1250,
      jobs: 45,
      description:
        "C√¥ng ty ph·∫ßn m·ªÅm h√†ng ƒë·∫ßu Vi·ªát Nam v·ªõi h∆°n 25 nƒÉm kinh nghi·ªám",
      employees: "10,000+",
    },
    {
      id: 2,
      name: "Viettel",
      logo: "https://via.placeholder.com/80/36CFC9/ffffff?text=VT",
      rating: 4.0,
      reviews: 890,
      jobs: 32,
      description: "T·∫≠p ƒëo√†n c√¥ng ngh·ªá - vi·ªÖn th√¥ng h√†ng ƒë·∫ßu",
      employees: "50,000+",
    },
    {
      id: 3,
      name: "VNG Corporation",
      logo: "https://via.placeholder.com/80/FF6B6B/ffffff?text=VNG",
      rating: 4.5,
      reviews: 567,
      jobs: 28,
      description: "C√¥ng ty c√¥ng ngh·ªá gi·∫£i tr√≠ v√† game s·ªë 1 Vi·ªát Nam",
      employees: "3,000+",
    },
    {
      id: 4,
      name: "Tiki Corporation",
      logo: "https://via.placeholder.com/80/4ECDC4/ffffff?text=TK",
      rating: 4.3,
      reviews: 423,
      jobs: 24,
      description: "N·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ h√†ng ƒë·∫ßu Vi·ªát Nam",
      employees: "2,500+",
    },
  ];

  const carouselItems = [
    {
      title: "T√¨m vi·ªác l√†m IT t·ªët nh·∫•t",
      subtitle: "H∆°n 10,000 c∆° h·ªôi vi·ªác l√†m ƒëang ch·ªù b·∫°n",
      background: "linear-gradient(135deg, #577cf6 0%, #667eea 100%)",
      icon: "üíª",
    },
    {
      title: "Kh·ªüi nghi·ªáp c√πng Startup",
      subtitle: "Gia nh·∫≠p c√°c c√¥ng ty startup ƒë·∫ßy ti·ªÅm nƒÉng",
      background: "linear-gradient(135deg, #36CFC9 0%, #4ECDC4 100%)",
      icon: "üöÄ",
    },
    {
      title: "Remote Work - T∆∞∆°ng lai c·ªßa c√¥ng vi·ªác",
      subtitle: "L√†m vi·ªác t·ª´ xa v·ªõi m·ª©c l∆∞∆°ng h·∫•p d·∫´n",
      background: "linear-gradient(135deg, #95E1D3 0%, #36CFC9 100%)",
      icon: "üè†",
    },
  ];

  const handleSearch = () => {
    console.log("Search:", searchKeyword, selectedLocation);
  };

  return (
    <Layout className="homepage-layout">
      <Content className="homepage-content">
        {/* Hero Section */}
        <Row>
          <Col span={2} />
          <Col span={20}>
            <section className="hero-section">
              <div className="hero-background"></div>
              <div className="hero-container">
                <Row gutter={[40, 40]} align="middle">
                  <Col xs={24} lg={14}>
                    <div className="hero-content">
                      <div className="hero-badge">
                        <TrophyOutlined /> #1 N·ªÅn t·∫£ng tuy·ªÉn d·ª•ng Vi·ªát Nam
                      </div>
                      <Title level={1} className="hero-title">
                        T√¨m ki·∫øm c∆° h·ªôi ngh·ªÅ nghi·ªáp
                        <span className="highlight"> tuy·ªát v·ªùi</span>
                      </Title>
                      <Paragraph className="hero-description">
                        Kh√°m ph√° h√†ng ngh√¨n vi·ªác l√†m t·ª´ c√°c c√¥ng ty h√†ng ƒë·∫ßu.
                        B·∫Øt ƒë·∫ßu h√†nh tr√¨nh s·ª± nghi·ªáp c·ªßa b·∫°n ngay h√¥m nay v·ªõi
                        m·ª©c l∆∞∆°ng c·∫°nh tranh v√† m√¥i tr∆∞·ªùng l√†m vi·ªác chuy√™n
                        nghi·ªáp!
                      </Paragraph>

                      {/* Search Bar */}
                      <div className="hero-search">
                        <div className="search-container">
                          <div className="search-input-group">
                            <Input
                              size="large"
                              placeholder="Nh·∫≠p v·ªã tr√≠ c√¥ng vi·ªác, k·ªπ nƒÉng..."
                              prefix={<SearchOutlined />}
                              value={searchKeyword}
                              onChange={(e) => setSearchKeyword(e.target.value)}
                              className="search-input"
                            />
                          </div>
                          <div className="location-input-group">
                            <Select
                              size="large"
                              placeholder="Ch·ªçn ƒë·ªãa ƒëi·ªÉm"
                              className="location-select"
                              value={selectedLocation}
                              onChange={setSelectedLocation}
                              allowClear
                              suffixIcon={<EnvironmentOutlined />}
                            >
                              <Option value="ho-chi-minh">H·ªì Ch√≠ Minh</Option>
                              <Option value="ha-noi">H√† N·ªôi</Option>
                              <Option value="da-nang">ƒê√† N·∫µng</Option>
                              <Option value="can-tho">C·∫ßn Th∆°</Option>
                              <Option value="remote">Remote</Option>
                            </Select>
                          </div>
                          <Button
                            type="primary"
                            size="large"
                            className="search-button"
                            onClick={handleSearch}
                          >
                            <SearchOutlined /> T√¨m ki·∫øm
                          </Button>
                        </div>
                      </div>

                      {/* Quick Tags */}
                      <div className="quick-tags">
                        <Text className="tags-label">T·ª´ kh√≥a ph·ªï bi·∫øn:</Text>
                        <Space wrap>
                          {[
                            "React",
                            "Python",
                            "Java",
                            "Marketing",
                            "Design",
                            "DevOps",
                            "AI/ML",
                            "Remote",
                          ].map((tag) => (
                            <Tag key={tag} className="quick-tag">
                              {tag}
                            </Tag>
                          ))}
                        </Space>
                      </div>

                      {/* Statistics */}
                      <div className="hero-stats">
                        <div className="stat-item">
                          <Title level={4} className="stat-number">
                            10K+
                          </Title>
                          <Text className="stat-label">Vi·ªác l√†m</Text>
                        </div>
                        <div className="stat-item">
                          <Title level={4} className="stat-number">
                            5K+
                          </Title>
                          <Text className="stat-label">C√¥ng ty</Text>
                        </div>
                        <div className="stat-item">
                          <Title level={4} className="stat-number">
                            100K+
                          </Title>
                          <Text className="stat-label">·ª®ng vi√™n</Text>
                        </div>
                      </div>
                    </div>
                  </Col>
                  <Col xs={24} lg={10}>
                    <div className="hero-carousel">
                      <Carousel autoplay autoplaySpeed={4000} effect="fade">
                        {carouselItems.map((item, index) => (
                          <div key={index}>
                            <div
                              className="carousel-item"
                              style={{ background: item.background }}
                            >
                              <div className="carousel-content">
                                <div className="carousel-icon">{item.icon}</div>
                                <Title level={3} className="carousel-title">
                                  {item.title}
                                </Title>
                                <Text className="carousel-subtitle">
                                  {item.subtitle}
                                </Text>
                              </div>
                            </div>
                          </div>
                        ))}
                      </Carousel>
                    </div>
                  </Col>
                </Row>
              </div>
            </section>
          </Col>
          <Col span={2} />
        </Row>
        {/* Featured Jobs Section */}
        <Row>
          <Col span={2} />
          <Col span={20}>
            <section className="featured-jobs-section">
              <div className="section-container">
                <div className="section-header">
                  <div className="section-title-group">
                    <Title level={2} className="section-title">
                      <FireOutlined className="section-icon" />
                      Vi·ªác l√†m n·ªïi b·∫≠t
                    </Title>
                    <Text className="section-subtitle">
                      Nh·ªØng c∆° h·ªôi vi·ªác l√†m t·ªët nh·∫•t ƒë∆∞·ª£c c·∫≠p nh·∫≠t h√†ng ng√†y
                    </Text>
                  </div>
                  <Button type="primary" ghost className="view-all-btn">
                    Xem t·∫•t c·∫£ <RightOutlined />
                  </Button>
                </div>

                <Row gutter={[24, 24]}>
                  {featuredJobs.map((job) => (
                    <Col xs={24} md={12} xl={8} key={job.id}>
                      <Card className="job-card" hoverable>
                        <div className="job-header">
                          <Avatar
                            src={job.logo}
                            size={56}
                            className="company-logo"
                          />
                          <div className="job-actions">
                            <Button
                              type="text"
                              icon={<HeartOutlined />}
                              className={`save-btn ${job.saved ? "saved" : ""}`}
                            />
                            <Button
                              type="text"
                              icon={<ShareAltOutlined />}
                              className="share-btn"
                            />
                          </div>
                        </div>

                        <div className="job-info">
                          <div className="job-title-group">
                            <Title level={4} className="job-title">
                              {job.title}
                            </Title>
                            {job.urgent && (
                              <Badge count="Urgent" className="urgent-badge" />
                            )}
                          </div>
                          <Text className="company-name">{job.company}</Text>

                          <div className="job-details">
                            <div className="detail-item">
                              <EnvironmentOutlined className="detail-icon" />
                              <Text>{job.location}</Text>
                            </div>
                            <div className="detail-item">
                              <DollarOutlined className="detail-icon" />
                              <Text className="salary-text">{job.salary}</Text>
                            </div>
                            <div className="detail-item">
                              <ClockCircleOutlined className="detail-icon" />
                              <Tag className="job-type-tag">{job.type}</Tag>
                            </div>
                          </div>

                          <div className="job-tags">
                            {job.tags.map((tag) => (
                              <Tag key={tag} className="skill-tag">
                                {tag}
                              </Tag>
                            ))}
                          </div>

                          <div className="job-footer">
                            <Text className="posted-time" type="secondary">
                              <ClockCircleOutlined /> {job.posted}
                            </Text>
                            <Button type="primary" className="apply-btn">
                              ·ª®ng tuy·ªÉn ngay
                            </Button>
                          </div>
                        </div>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </div>
            </section>
          </Col>
          <Col span={2} />
        </Row>

        {/* Top Companies Section */}
        <Row>
          <Col span={2} />
          <Col span={20}>
            <section className="top-companies-section">
              <div className="section-container">
                <div className="section-header">
                  <div className="section-title-group">
                    <Title level={2} className="section-title">
                      <StarOutlined className="section-icon" />
                      Top c√¥ng ty h√†ng ƒë·∫ßu
                    </Title>
                    <Text className="section-subtitle">
                      Nh·ªØng c√¥ng ty uy t√≠n v·ªõi m√¥i tr∆∞·ªùng l√†m vi·ªác t·ªët nh·∫•t
                    </Text>
                  </div>
                  <Button type="primary" ghost className="view-all-btn">
                    Xem t·∫•t c·∫£ <RightOutlined />
                  </Button>
                </div>

                <Row gutter={[24, 24]}>
                  {topCompanies.map((company) => (
                    <Col xs={24} md={12} lg={6} key={company.id}>
                      <Card className="company-card" hoverable>
                        <div className="company-header">
                          <Avatar
                            src={company.logo}
                            size={72}
                            className="company-avatar"
                          />
                          <div className="company-rating">
                            <Rate
                              disabled
                              defaultValue={company.rating}
                              allowHalf
                              className="rating-stars"
                            />
                            <Text className="rating-text">
                              {company.rating} ({company.reviews})
                            </Text>
                          </div>
                        </div>

                        <div className="company-info">
                          <Title level={4} className="company-name">
                            {company.name}
                          </Title>
                          <Paragraph className="company-description">
                            {company.description}
                          </Paragraph>
                        </div>

                        <div className="company-stats">
                          <div className="company-stat">
                            <TeamOutlined className="stat-icon" />
                            <Text>{company.employees} nh√¢n vi√™n</Text>
                          </div>
                          <div className="company-stat">
                            <CheckCircleOutlined className="stat-icon" />
                            <Text>{company.jobs} vi·ªác l√†m</Text>
                          </div>
                        </div>

                        <div className="company-footer">
                          <Button
                            type="primary"
                            className="view-company-btn"
                            block
                          >
                            Xem c√¥ng ty
                          </Button>
                        </div>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </div>
            </section>
          </Col>
          <Col span={2} />
        </Row>

        {/* Features Section */}
        <section className="features-section">
          <div className="section-container">
            <div className="section-header centered">
              <Title level={2} className="section-title">
                T·∫°i sao ch·ªçn ch√∫ng t√¥i?
              </Title>
              <Text className="section-subtitle">
                Nh·ªØng l√Ω do khi·∫øn Jobzi tr·ªü th√†nh l·ª±a ch·ªçn h√†ng ƒë·∫ßu
              </Text>
            </div>

            <Row gutter={[32, 32]} justify="center">
              <Col xs={24} md={8}>
                <div className="feature-item">
                  <div className="feature-icon">
                    <SearchOutlined />
                  </div>
                  <Title level={4} className="feature-title">
                    T√¨m ki·∫øm th√¥ng minh
                  </Title>
                  <Text className="feature-description">
                    C√¥ng ngh·ªá AI gi√∫p t√¨m ki·∫øm v√† g·ª£i √Ω vi·ªác l√†m ph√π h·ª£p v·ªõi k·ªπ
                    nƒÉng v√† kinh nghi·ªám c·ªßa b·∫°n
                  </Text>
                </div>
              </Col>
              <Col xs={24} md={8}>
                <div className="feature-item">
                  <div className="feature-icon">
                    <UserOutlined />
                  </div>
                  <Title level={4} className="feature-title">
                    H·ªì s∆° chuy√™n nghi·ªáp
                  </Title>
                  <Text className="feature-description">
                    T·∫°o h·ªì s∆° ·∫•n t∆∞·ª£ng v·ªõi c√°c template ƒë∆∞·ª£c thi·∫øt k·∫ø b·ªüi chuy√™n
                    gia HR
                  </Text>
                </div>
              </Col>
              <Col xs={24} md={8}>
                <div className="feature-item">
                  <div className="feature-icon">
                    <CheckCircleOutlined />
                  </div>
                  <Title level={4} className="feature-title">
                    ·ª®ng tuy·ªÉn nhanh ch√≥ng
                  </Title>
                  <Text className="feature-description">
                    ·ª®ng tuy·ªÉn ch·ªâ v·ªõi m·ªôt c√∫ click v√† theo d√µi tr·∫°ng th√°i ƒë∆°n
                    ·ª©ng tuy·ªÉn real-time
                  </Text>
                </div>
              </Col>
            </Row>
          </div>
        </section>
      </Content>
    </Layout>
  );
};

export default HomePage;
